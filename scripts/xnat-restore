#!/bin/bash

ORIGIN=`dirname $0`
source ${ORIGIN}/macros
source ${ORIGIN}/vars.sh

[[ -z "${1}" ]] && { echo You must specify the capture tag to restore; exit 127; } || { CAPTURE_TAG=${1}; }

[[ -d /captures/${CAPTURE_TAG} ]] && { echo The folder for capture tag ${CAPTURE_TAG} does not exist. Exiting.; exit 126; }

USER=`whoami`
getProjectDir

echo Restoring to capture ${CAPTURE_TAG} to project ${PROJECT}

echo Stopping Tomcat.
sudo service tomcat7 stop
sleep 5; # Just because the service command has returned doesn't mean the service stopped right then.

echo Dropping and recreating the database, importing /captures/$CAPTURE_TAG/$PROJECT-$CAPTURE_TAG.sql.
sudo -u postgres dropdb ${PROJECT}
sudo -u postgres createdb -O ${VM_USER} ${PROJECT}

sudo -u ${VM_USER} psql -d ${PROJECT} -f /captures/$CAPTURE_TAG/$PROJECT-$CAPTURE_TAG.sql

# Restore the site URL from the local vars.sh if it differs from the site URL in the restored capture.
CONFIGURED=$(sudo -u ${VM_USER} psql -t -c "select value from xhbm_preference where name = 'siteUrl'" | sed -e 's/ *$//' | sed 's/^ *//')
CONTEXT=$(echo ${CONFIGURED} | awk -F/ '{print $4}')
[[ ${CONFIGURED} == http://* ]] && { UPDATED=http://${SERVER}; } || { UPDATED=https://${SERVER}; }
[[ ${CONTEXT} != "" ]] && { UPDATED="${UPDATED}/${CONTEXT}"; }
[[ ${UPDATED} != ${CONFIGURED} ]] && { \
    echo Setting the site URL to the configured server address: ${UPDATED}; \
    sudo -u ${VM_USER} psql -t -c "update xhbm_preference set value = '${UPDATED}' where name = 'siteUrl'"; \
}

echo Clearing the archive folder and replacing with /captures/$CAPTURE_TAG/archive-$CAPTURE_TAG.zip.
sudo rm -rf ${DATA_ROOT}/archive/*
sudo unzip -d ${DATA_ROOT}/archive /captures/$CAPTURE_TAG/archive-$CAPTURE_TAG.zip
echo Clearing the plugins folder and replacing with /captures/$CAPTURE_TAG/plugins-$CAPTURE_TAG.zip.
sudo rm -rf ${DATA_ROOT}/home/plugins/*
sudo unzip -d ${DATA_ROOT}/home/plugins /captures/$CAPTURE_TAG/plugins-$CAPTURE_TAG.zip

echo Restarting Tomcat.
startTomcat
monitorTomcatStartup

STATUS=$?
if [[ ${STATUS} == 0 ]]; then
    echo The application was started successfully.
else
    echo The application does not appear to have started properly. Status code: ${STATUS}
    echo The last lines in the log are:; tail -n 40 /var/log/tomcat7/catalina.out;
fi

exit ${STATUS}


